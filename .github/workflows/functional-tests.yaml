name: 'Functional tests'
on:
  repository_dispatch:
    types: [functional-tests]
jobs:
  build:
    name: 'Run Functional Tests'
    runs-on: ubuntu-latest
    env: 
      FUNCTIONAL_TEST_APP_ID: 428394
    steps:
      - uses: tibdex/github-app-token@v1
        id: get_installation_token
        with: 
          app_id: ${{ env.FUNCTIONAL_TEST_APP_ID }}
          private_key: ${{ secrets.FUNCTIONAL_TEST_APP_PRIVATE_KEY }}
      - name: Set up checkout target (repository_dispatch from /ok-to-test)
        if: github.event_name == 'repository_dispatch'
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.get_installation_token.outputs.token }}
          script: |
            const testPayload = context.payload.client_payload;
            if (testPayload && testPayload.command === `ok-to-test`) {
              var fs = require('fs');
              // Set environment variables
              fs.appendFileSync(process.env.GITHUB_ENV,
                `CHECKOUT_REPO=${testPayload.pull_head_repo}\n`+
                `CHECKOUT_REF=${testPayload.pull_head_ref}\n`+
                `PR_NUMBER=${testPayload.issue.number}`
              );
            }
      - name: Check out code
        uses: actions/checkout@v3
        with:
          repository: ${{ env.CHECKOUT_REPO }}
          ref: ${{ env.CHECKOUT_REF }}
      - uses: marocchino/sticky-pull-request-comment@v2
        if: success() && env.PR_NUMBER != ''
        continue-on-error: true
        with:
          GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token }}
          header: teststatus-${{ github.run_id }}
          number: ${{ env.PR_NUMBER }}
          append: true
          message: |
            :white_check_mark: Creating functional test check for PR: ${{ env.PR_NUMBER }} for ${{ github.sha }}
      - uses: LouisBrunner/checks-action@v1.6.1
        if: always()
        with:
          token: ${{ steps.get_installation_token.outputs.token }}
          name: 'Functional Tests'
          status: in_progress
          repo: ${{ github.repository }}
          sha: ${{ env.CHECKOUT_REF }}
      - uses: marocchino/sticky-pull-request-comment@v2
        if: success() && env.PR_NUMBER != ''
        continue-on-error: true
        with:
          GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token }}
          header: teststatus-${{ github.run_id }}
          number: ${{ env.PR_NUMBER }}
          append: true
          message: |
            :white_check_mark: Running for PR: ${{ env.PR_NUMBER }}
      - uses: LouisBrunner/checks-action@v1.6.1
        if: always()
        with:
          token: ${{ steps.get_installation_token.outputs.token }}
          name: 'Functional Tests'
          repo: ${{ github.repository }}
          sha: ${{ env.CHECKOUT_REF }}
          status: completed
          conclusion: ${{ job.status }}
          output: |
            {"summary":"all tests passed, great job."}
      - uses: marocchino/sticky-pull-request-comment@v2
        if: success() && env.PR_NUMBER != ''
        continue-on-error: true
        with:
          GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token }}
          header: teststatus-${{ github.run_id }}
          number: ${{ env.PR_NUMBER }}
          append: true
          message: |
            :white_check_mark: Completed for PR: ${{ env.PR_NUMBER }}
